
matrix_test.elf:     file format elf32-loongarch


Disassembly of section .text:

10000000 <_start+0x10000000>:
10000000:	15008004 	lu12i.w	$r4,-523264(0x80400)                    # r4 = 80400000 A矩阵
10000004:	15008205 	lu12i.w	$r5,-523248(0x80410)                    # r5 = 80410000
10000008:	15008406 	lu12i.w	$r6,-523232(0x80420)                    # r6 = 80420000
1000000c:	03818007 	ori	$r7,$r0,0x60                                # r7 = 00000060
10000010:	00150014 	move	$r20,$r0                                # r20 为 k, 是A矩阵的列索引，B矩阵的行索引       

10000014 <loop1>:
10000014:	58006e87 	beq	$r20,$r7,108(0x6c) # 10000080 <loop1end>    # r20 第一层循环, 循环结束条件 r20 = 00000060 k != n
10000018:	00408a8c 	slli.w	$r12,$r20,0x2                           # r12 = 0
1000001c:	0040a68e 	slli.w	$r14,$r20,0x9                           # r14 = 0
10000020:	0010308c 	add.w	$r12,$r4,$r12                           # 加载 a[i][k] 的地址
10000024:	001038ae 	add.w	$r14,$r5,$r14                           # r14 = 80410000(第一个地址)
10000028:	0015000d 	move	$r13,$r0                                # r13 为 i , 是A矩阵的行索引

1000002c <loop2>:
1000002c:	58004da7 	beq	$r13,$r7,76(0x4c) # 10000078 <loop2end>     # r13 = 00000060 为结束条件 第二层循环 i != n
10000030:	28800193 	ld.w	$r19,$r12,0                             # r = a[i][k]
10000034:	0040a5a8 	slli.w	$r8,$r13,0x9
10000038:	001020c8 	add.w	$r8,$r6,$r8
1000003c:	001501d0 	move	$r16,$r14
10000040:	0015000f 	move	$r15,$r0                                # r15 为 j, 是B矩阵的列索引

10000044 <loop3>:
10000044:	580029e7 	beq	$r15,$r7,40(0x28) # 1000006c <loop3end>     # j != n
10000048:	028005ef 	addi.w	$r15,$r15,1(0x1)
1000004c:	28800211 	ld.w	$r17,$r16,0
10000050:	28800112 	ld.w	$r18,$r8,0
10000054:	001c4671 	mul.w	$r17,$r19,$r17                          # 
10000058:	02801108 	addi.w	$r8,$r8,4(0x4)
1000005c:	02801210 	addi.w	$r16,$r16,4(0x4)
10000060:	00104651 	add.w	$r17,$r18,$r17
10000064:	29bff111 	st.w	$r17,$r8,-4(0xffc)
10000068:	53ffdfff 	b	-36(0xfffffdc) # 10000044 <loop3>

1000006c <loop3end>:
1000006c:	028005ad 	addi.w	$r13,$r13,1(0x1)
10000070:	0288018c 	addi.w	$r12,$r12,512(0x200)
10000074:	53ffbbff 	b	-72(0xfffffb8) # 1000002c <loop2>

10000078 <loop2end>:
10000078:	02800694 	addi.w	$r20,$r20,1(0x1)
1000007c:	53ff9bff 	b	-104(0xfffff98) # 10000014 <loop1>

10000080 <loop1end>:
10000080:	4c000020 	jirl	$r0,$r1,0

matrix_test.elf:     file format elf32-loongarch


Disassembly of section .text:

80100000 <_start+0x80100000>:
80100000:	15008004 	lu12i.w	$r4,-523264(0x80400)
80100004:	15008205 	lu12i.w	$r5,-523248(0x80410)
80100008:	15008406 	lu12i.w	$r6,-523232(0x80420)
8010000c:	03800c07 	ori	$r7,$r0,0x3
80100010:	00150014 	move	$r20,$r0

80100014 <loop1>:
80100014:	58006e87 	beq	$r20,$r7,108(0x6c) # 80100080 <loop1end>
80100018:	00408a8c 	slli.w	$r12,$r20,0x2
8010001c:	0040a68e 	slli.w	$r14,$r20,0x9
80100020:	0010308c 	add.w	$r12,$r4,$r12
80100024:	001038ae 	add.w	$r14,$r5,$r14
80100028:	0015000d 	move	$r13,$r0

8010002c <loop2>:
8010002c:	58004da7 	beq	$r13,$r7,76(0x4c) # 80100078 <loop2end>
80100030:	28800193 	ld.w	$r19,$r12,0
80100034:	0040a5a8 	slli.w	$r8,$r13,0x9
80100038:	001020c8 	add.w	$r8,$r6,$r8
8010003c:	001501d0 	move	$r16,$r14
80100040:	0015000f 	move	$r15,$r0

80100044 <loop3>:
80100044:	580029e7 	beq	$r15,$r7,40(0x28) # 8010006c <loop3end>
80100048:	028005ef 	addi.w	$r15,$r15,1(0x1)
8010004c:	28800211 	ld.w	$r17,$r16,0
80100050:	28800112 	ld.w	$r18,$r8,0
80100054:	001c4671 	mul.w	$r17,$r19,$r17
80100058:	02801108 	addi.w	$r8,$r8,4(0x4)
8010005c:	02801210 	addi.w	$r16,$r16,4(0x4)
80100060:	00104651 	add.w	$r17,$r18,$r17
80100064:	29bff111 	st.w	$r17,$r8,-4(0xffc)
80100068:	53ffdfff 	b	-36(0xfffffdc) # 80100044 <loop3>

8010006c <loop3end>:
8010006c:	028005ad 	addi.w	$r13,$r13,1(0x1)
80100070:	0288018c 	addi.w	$r12,$r12,512(0x200)
80100074:	53ffbbff 	b	-72(0xfffffb8) # 8010002c <loop2>

80100078 <loop2end>:
80100078:	02800694 	addi.w	$r20,$r20,1(0x1)
8010007c:	53ff9bff 	b	-104(0xfffff98) # 80100014 <loop1>

80100080 <loop1end>:
80100080:	4c000020 	jirl	$r0,$r1,0

matrix_test.elf:     file format elf32-loongarch


Disassembly of section .text:

80100000 <_start+0x80100000>:
80100000:	15008004 	lu12i.w	$r4,-523264(0x80400)
80100004:	15008205 	lu12i.w	$r5,-523248(0x80410)
80100008:	15008406 	lu12i.w	$r6,-523232(0x80420)
8010000c:	03800807 	ori	$r7,$r0,0x2
80100010:	00150014 	move	$r20,$r0

80100014 <loop1>:
80100014:	58006e87 	beq	$r20,$r7,108(0x6c) # 80100080 <loop1end>
80100018:	00408a8c 	slli.w	$r12,$r20,0x2
8010001c:	0040a68e 	slli.w	$r14,$r20,0x9
80100020:	0010308c 	add.w	$r12,$r4,$r12
80100024:	001038ae 	add.w	$r14,$r5,$r14
80100028:	0015000d 	move	$r13,$r0

8010002c <loop2>:
8010002c:	58004da7 	beq	$r13,$r7,76(0x4c) # 80100078 <loop2end>
80100030:	28800193 	ld.w	$r19,$r12,0
80100034:	0040a5a8 	slli.w	$r8,$r13,0x9
80100038:	001020c8 	add.w	$r8,$r6,$r8
8010003c:	001501d0 	move	$r16,$r14
80100040:	0015000f 	move	$r15,$r0

80100044 <loop3>:
80100044:	580029e7 	beq	$r15,$r7,40(0x28) # 8010006c <loop3end>
80100048:	028005ef 	addi.w	$r15,$r15,1(0x1)
8010004c:	28800211 	ld.w	$r17,$r16,0
80100050:	28800112 	ld.w	$r18,$r8,0
80100054:	001c4671 	mul.w	$r17,$r19,$r17
80100058:	02801108 	addi.w	$r8,$r8,4(0x4)
8010005c:	02801210 	addi.w	$r16,$r16,4(0x4)
80100060:	00104651 	add.w	$r17,$r18,$r17
80100064:	29bff111 	st.w	$r17,$r8,-4(0xffc)
80100068:	53ffdfff 	b	-36(0xfffffdc) # 80100044 <loop3>

8010006c <loop3end>:
8010006c:	028005ad 	addi.w	$r13,$r13,1(0x1)
80100070:	0288018c 	addi.w	$r12,$r12,512(0x200)
80100074:	53ffbbff 	b	-72(0xfffffb8) # 8010002c <loop2>

80100078 <loop2end>:
80100078:	02800694 	addi.w	$r20,$r20,1(0x1)
8010007c:	53ff9bff 	b	-104(0xfffff98) # 80100014 <loop1>

80100080 <loop1end>:
80100080:	4c000020 	jirl	$r0,$r1,0
